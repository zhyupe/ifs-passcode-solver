{"version":3,"sources":["lib/canvas-helper.ts","lib/blockhash.worker.ts","lib/process.ts","lib/blockhash-worker.ts","lib/file-reader.ts","App.tsx","index.tsx"],"names":["drawLine","ctx","points","beginPath","forEach","index","x","y","stroke","Worker","blockhashWorker","map","worker","counter","this","onmessage","ev","data","id","result","console","warn","bits","method","newJob","a","b","job","params","Promise","resolve","postMessage","compareColor","distance","r","g","readPoint","image","width","height","Error","offset","isRowBlank","threshold","bgColor","from","to","i","color","isColumnBlank","parseImage","drawLines","getImageData","log","globalTop","lineWidth","strokeStyle","fillStyle","columns","left","right","column","top","bottom","images","dx","fixedRight","imgData","getHash","hash","push","portalsToPoints","portals","dy","validPortals","filter","item","Math","max","latE6","min","lngE6","scale","actualWidth","actualHeight","findNearestHash","hashes","score","Infinity","length","getDistance","curScore","getFiles","element","files","Array","openReader","file","reject","fileReader","FileReader","onload","onerror","type","startsWith","Image","src","App","canvas","useRef","useState","debugging","form","setForm","setPortals","setImage","running","setRunning","finished","setFinished","useCallback","canvasElement","current","getContext","drawImage","setTimeout","all","portalIndex","matchedPortals","size","handleChange","event","target","name","checked","value","fieldStyle","disabled","style","handleDataFileChange","input","content","JSON","parse","Container","className","Grid","container","justify","spacing","xs","Typography","variant","display","gutterBottom","accept","onChange","e","htmlFor","Button","component","marginLeft","readImage","then","img","md","Input","Switch","Card","marginTop","marginBottom","CardContent","Link","href","download","onClick","catch","marginRight","toBlob","blob","saveAs","CircularProgress","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf4ccaff.chunk.js","sourcesContent":["\nexport function drawLine(ctx: CanvasRenderingContext2D, points: number[][]) {\n  ctx.beginPath()\n  points.forEach(([x, y], index) => {\n    ctx[index === 0 ? 'moveTo' : 'lineTo'](x, y)\n  })\n  ctx.stroke()\n}\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/blockhash.worker.81597d1a.worker.js\");\n}\n","import { Portal } from \"../types/portal\"\nimport { drawLine } from \"./canvas-helper\"\nimport { Column } from \"../types/column\"\nimport { BlockhashWorker } from \"./blockhash-worker\"\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nconst blockhashWorker = new BlockhashWorker()\n\nconst compareColor = (a: Color, b: Color, distance: number): boolean => {\n  const score = (a.r - b.r) * (a.r - b.r) + (a.g - b.g) * (a.g - b.g) + (a.b - b.b) * (a.b - b.b)\n  return score <= distance\n}\n\nconst readPoint = (image: ImageData, x: number, y: number): Color => {\n  if (x > image.width || y > image.height || x < 0 || y < 0) {\n    throw new Error(`Invalid point (${x},${y}) in image (${image.width},${image.height})`)\n  }\n\n  const offset = (image.width * y + x) * 4\n  return {\n    r: image.data[offset],\n    g: image.data[offset + 1],\n    b: image.data[offset + 2],\n    a: image.data[offset + 3],\n  }\n}\n\nconst isRowBlank = (image: ImageData, y: number, threshold: number, bgColor: Color, from = 0, to = image.width): boolean => {\n  for (let i = from; i < to; ++i) {\n    const color = readPoint(image, i, y)\n\n    if (!compareColor(color, bgColor, threshold)) {\n      // console.log(`Diff: (${i}, ${y}) - (${color.r}, ${color.g}, ${color.b})`)\n      return false\n    }\n  }\n\n  return true\n}\n\nconst isColumnBlank = (image: ImageData, x: number, threshold: number, bgColor: Color, from = 0, to = image.height): boolean => {\n  for (let i = from; i < to; ++i) {\n    const color = readPoint(image, x, i)\n\n    if (!compareColor(color, bgColor, threshold)) {\n      // console.log(`Diff: (${x}, ${i}) - (${color.r}, ${color.g}, ${color.b})`)\n      return false\n    }\n  }\n\n  return true\n}\n\nexport async function parseImage(ctx: CanvasRenderingContext2D, width: number, height: number, threshold = 800, drawLines = false): Promise<Column[]> {\n  const data = ctx.getImageData(0, 0, width, height)\n\n  const bgColor = readPoint(data, 0, 0)\n  console.log('BgColor:', bgColor)\n\n  let globalTop = 0\n\n  ctx.lineWidth = 1\n  ctx.strokeStyle = '#0FF'\n  ctx.fillStyle = '#0FF'\n\n  // Step.1 Read header\n  while ((++globalTop) < data.height && isRowBlank(data, globalTop, threshold, bgColor));\n  while ((++globalTop) < data.height && !isRowBlank(data, globalTop, threshold, bgColor));\n  while ((++globalTop) < data.height && isRowBlank(data, globalTop, threshold, bgColor));\n\n  console.log('globalTop:', globalTop)\n  if (drawLines) {\n    ctx.strokeStyle = '#0FF'\n    drawLine(ctx, [[0, globalTop - 1], [data.width, globalTop - 1]])\n  }\n  \n  // Step.2 Read columns\n  let x = 0\n  let i = 0\n\n  const columns: Column[] = []\n\n  while (x < data.width) {\n    // Step 2.1 Find non-blank column\n    while (x < data.width && isColumnBlank(data, x, threshold, bgColor, globalTop)) ++x;\n    const left = x\n    \n    // Step 2.2 Find blank column\n    while (x < data.width && !isColumnBlank(data, x, threshold, bgColor, globalTop)) ++x;\n    const right = x\n\n    if (left >= right) break\n\n    const column: Column = {\n      top: globalTop,\n      left,\n      right,\n      bottom: data.height,\n      images: [],\n    }\n\n    const index = ++i\n    console.log(`Column #${index}:`, left, right)\n\n    if (drawLines) {\n      ctx.strokeStyle = '#0FF'\n      drawLine(ctx, [[left - 1, globalTop], [left - 1, data.height]])\n\n      ctx.strokeStyle = '#F0F'\n      drawLine(ctx, [[right, globalTop], [right, data.height]])\n    }\n\n    // Step 2.3 Find each row\n    let y = globalTop\n    while (y < data.height) {\n      // Step 2.3.1 Find non-blank row\n      while (y < data.height && isRowBlank(data, y, threshold, bgColor, left, right)) ++y;\n      const top = y\n      \n      // Step 2.3.2 Find blank row\n      while (y < data.height && !isRowBlank(data, y, threshold, bgColor, left, right)) ++y;\n      const bottom = y\n\n      if (top >= bottom) break\n\n      // Step 2.3.3 Find first blank column\n      let dx = left\n      while (dx < right && !isColumnBlank(data, dx, threshold, bgColor, top, bottom)) ++dx;\n      const fixedRight = dx\n\n\n      if (drawLines) {\n        ctx.strokeStyle = '#0FF'\n        drawLine(ctx, [[left, top - 1], [right, top - 1]])\n  \n        ctx.strokeStyle = '#F0F'\n        drawLine(ctx, [[left, bottom], [right, bottom]])\n  \n        ctx.strokeStyle = '#FF0'\n        drawLine(ctx, [[fixedRight, top], [fixedRight, bottom]])\n      }\n\n      console.log(`Image: (${left},${top}),(${fixedRight},${bottom})`)\n      const imgData = ctx.getImageData(left, top, fixedRight - left, bottom - top)\n      column.images.push({\n        top,\n        left,\n        right,\n        bottom,\n        hash: await blockhashWorker.getHash(imgData, 16, 2)\n      })\n    }\n\n    columns.push(column)\n  }\n\n  return columns\n}\n\nexport function portalsToPoints(portals: (Portal | null)[], width: number, height: number, dx: number = 0, dy: number = 0): number[][] {\n  const validPortals = portals.filter(item => item) as Portal[]\n  const top = Math.max(...validPortals.map(item => item.latE6))\n  const bottom = Math.min(...validPortals.map(item => item.latE6))\n  const left = Math.min(...validPortals.map(item => item.lngE6))\n  const right = Math.max(...validPortals.map(item => item.lngE6))\n\n  const scale = Math.min(height / (top - bottom), width / (right - left))\n  const actualWidth = (right - left) * scale\n  const actualHeight = (top - bottom) * scale\n\n  return validPortals.map(({ lngE6, latE6 }) => {\n    const x = dx + (width - actualWidth) / 2 + (lngE6 - left) * scale\n    const y = dy + (width - actualHeight) / 2 + (top - latE6) * scale\n    \n    return [x, y]\n  })\n}\n\nexport async function findNearestHash(hash: string, hashes: string[]): Promise<number> {\n  let score = Infinity\n  let index = -1\n  for (let i = 0; i < hashes.length; ++i) {\n    const item = hashes[i]\n    if (!item) continue\n\n    const curScore = await blockhashWorker.getDistance(item, hash)\n    if (curScore < score) {\n      score = curScore\n      index = i\n    }\n  }\n\n  return index\n}","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport Worker from 'worker-loader!./blockhash.worker.ts';\n\nexport class BlockhashWorker {\n  map: Record<string, Function> = {}\n  worker = new Worker()\n\n  counter = 0\n\n  constructor() {\n    this.worker.onmessage = (ev) => {\n      const { id, result } = ev.data\n      if (!id || !this.map[id]) {\n        console.warn(`Cannot find corresponding handler: ${id}, ${result}`)\n        return\n      }\n\n      this.map[id](result)\n      delete this.map[id]\n    }\n  }\n\n  getHash(data: ImageData, bits: number, method: number): Promise<string> {\n    return this.newJob('hash', { data, bits, method })\n  }\n\n  getDistance(a: string, b: string): Promise<number> {\n    return this.newJob('distance', { a, b })\n  }\n\n  private newJob(job: string, params: any): Promise<any> {\n    return new Promise((resolve) => {\n      const id = ++this.counter\n      this.map[id] = resolve\n\n      this.worker.postMessage({ id, job, ...params })\n    })\n  }\n}\n","export const getFiles = (element: HTMLInputElement): File[] => {\n  if (!element.files || !element.files.length) {\n    return []\n  }\n\n  return Array.from(element.files)\n}\n\nexport type FileReaderMethod = 'readAsArrayBuffer' | 'readAsBinaryString' | 'readAsDataURL' | 'readAsText'\n\nexport function openReader(file: File, method: 'readAsArrayBuffer'): Promise<ArrayBuffer>\nexport function openReader(file: File, method: 'readAsBinaryString' | 'readAsDataURL' | 'readAsText'): Promise<string>\nexport function openReader(file: File, method: FileReaderMethod): Promise<string | ArrayBuffer | null> {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader()\n    fileReader.onload = () => {\n      resolve(fileReader.result)\n    }\n    fileReader.onerror = reject\n    fileReader[method](file)\n  })\n}\n\nexport async function readImage(element: HTMLInputElement): Promise<HTMLImageElement | null> {\n  for (const file of getFiles(element)) {\n    if (!file.type.startsWith('image/')) continue\n\n    const image = new Image()\n    image.src = await openReader(file, 'readAsDataURL')\n    \n    return image\n  }\n\n  return null\n}","import React, { useRef, useState, useCallback } from 'react';\nimport { Container, CircularProgress, Grid, Switch, Typography, Button, Input, Card, CardContent, Link } from '@material-ui/core';\nimport { portalsToPoints, parseImage, findNearestHash } from './lib/process';\nimport { getFiles, openReader, readImage } from './lib/file-reader';\nimport { drawLine } from './lib/canvas-helper';\nimport { Portal } from './types/portal';\nimport { saveAs } from 'file-saver'\nimport './App.css';\n\nfunction App() {\n  const canvas = useRef<HTMLCanvasElement>(null)\n  const [form, setForm] = useState({\n    threshold: 800,\n    lineWidth: 5,\n    debugging: false,\n  });\n  const [portals, setPortals] = useState<Portal[]>([])\n  const [image, setImage] = useState<HTMLImageElement | null>(null)\n  const [running, setRunning] = useState(false)\n  const [finished, setFinished] = useState(false)\n\n  const job = useCallback(async () => {\n    const canvasElement = canvas.current\n    if (!image || !canvasElement) return\n\n    canvasElement.width = image.width\n    canvasElement.height = image.height\n\n    const ctx = canvasElement.getContext('2d')\n    if (!ctx) return\n\n    ctx.drawImage(image, 0, 0)\n    await new Promise((resolve) => setTimeout(resolve, 100))\n\n    const columns = await parseImage(ctx, image.width, image.height, form.threshold, form.debugging)\n\n    for (const column of columns) {\n      const hashes = portals.map(({ hash }) => hash)\n      const matchedPortals = await Promise.all(column.images.map(async ({ hash }) => {\n        const portalIndex = await findNearestHash(hash, hashes as string[])\n        return portals[portalIndex]\n      }))\n\n      const size = column.right - column.left - 40\n      const points = portalsToPoints(\n        matchedPortals, \n        size, \n        size, \n        column.left + 20, \n        column.bottom - size - 50\n      )\n\n      ctx.lineWidth = form.lineWidth\n      ctx.strokeStyle = '#fff'\n      drawLine(ctx, points)\n    }\n  }, [form, image, portals])\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target\n    setForm({ ...form, [target.name]: target.type === 'radio' || target.type === 'checkbox' ? target.checked : target.value });\n  }\n\n  const fieldStyle = {\n    disabled: running,\n    style: { width: '100%' }\n  }\n\n  const handleDataFileChange = async (input: HTMLInputElement) => {\n    for (const file of getFiles(input)) {\n      try {\n        const content = await openReader(file, 'readAsText')\n        setPortals(JSON.parse(content))\n        return\n      } catch (e) {}\n    }\n  }\n\n  const handleRunClick = () => {\n    if (running) return\n    setRunning(true)\n    job()\n      .then(() => setFinished(true))\n      .catch(() => {})\n      .then(() => setRunning(false))\n  }\n\n  const handleSaveClick = () => {\n    const canvasElement = canvas.current\n    if (!image || !canvasElement) return\n\n    canvasElement.toBlob((blob) => blob && saveAs(blob))\n  }\n\n  return (\n    <>\n      <Container className=\"App\">\n        <h3>IFS Passcode Challenge Solver</h3>\n        <Grid container justify=\"space-between\" spacing={3}>\n          <Grid item xs>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Data File\n            </Typography>\n            <input\n              accept=\"application/json\"\n              style={{ display: 'none' }}\n              id=\"json-file\"\n              type=\"file\"\n              onChange={(e) => handleDataFileChange(e.target)}\n            />\n            <label htmlFor=\"json-file\">\n              <Button variant=\"contained\" component=\"span\" color={portals.length ? 'default' : 'secondary'}>\n                Select\n              </Button>\n            </label>\n            {\n              portals.length > 0 ? (\n                <span style={{ marginLeft: 10 }}>Loaded {portals.length} portal(s)</span>\n              ) : null\n            }\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Image\n            </Typography>\n            <input\n              accept=\"image/jpeg,image/png\"\n              style={{ display: 'none' }}\n              id=\"image-file\"\n              type=\"file\"\n              onChange={(e) => readImage(e.target).then(img => img && setImage(img))}\n            />\n            <label htmlFor=\"image-file\">\n              <Button variant=\"contained\" component=\"span\" color={image ? 'default' : 'secondary'}>\n                Select\n              </Button>\n            </label>\n            {\n              image ? (\n                <span style={{ marginLeft: 10 }}>Image Loaded</span>\n              ) : null\n            }\n          </Grid>\n          <Grid item xs={12} md={1}>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Line Width\n            </Typography>\n            <Input\n              name=\"lineWidth\"\n              type=\"number\"\n              value={form.lineWidth}\n              onChange={handleChange}\n              {...fieldStyle}\n            />\n          </Grid>\n          <Grid item xs={12} md={1}>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Threshold\n            </Typography>\n            <Input\n              name=\"threshold\"\n              type=\"number\"\n              value={form.threshold}\n              onChange={handleChange}\n              {...fieldStyle}\n            />\n          </Grid>\n          <Grid item xs={12} md={1}>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Debugging\n            </Typography>\n            <Switch\n              checked={form.debugging}\n              onChange={handleChange}\n              name=\"debugging\"\n            />\n          </Grid>\n        </Grid>\n        <Card style={{ marginTop: 10, marginBottom: 10 }}>\n          <CardContent>\n            Need examples? We have one from Jianggan, Hangzhou:&nbsp;\n            <Link href=\"./demo/jianggan-hangzhou/portals.json\" download>Data</Link>,&nbsp;\n            <Link href=\"./demo/jianggan-hangzhou/2020-09.jpg\" download>Image</Link>\n          </CardContent>\n        </Card>\n        <div className=\"buttons\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!portals.length || !image || running}\n            onClick={handleRunClick}\n            style={{ marginRight: 10 }}\n          >\n            Run\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={!finished}\n            onClick={handleSaveClick}\n            style={{ marginRight: 10 }}\n          >\n            Save\n          </Button>\n          {\n            running ? (\n              <CircularProgress size={24} />\n            ) : null\n          }\n        </div>\n\n        <div className=\"canvas\">\n          <canvas ref={canvas} />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}